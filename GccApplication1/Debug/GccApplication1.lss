
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000001bc  00000230  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000270  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000002b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008ab  00000000  00000000  000002e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000715  00000000  00000000  00000b8b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031f  00000000  00000000  000012a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  000015c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003bd  00000000  00000000  00001620  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001dd  00000000  00000000  000019dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001bba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec eb       	ldi	r30, 0xBC	; 188
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 bd 00 	call	0x17a	; 0x17a <main>
  8e:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <led_switch>:
			}
	}
}

int led_switch() {
	PORTD = 0b01010101;
  96:	85 e5       	ldi	r24, 0x55	; 85
  98:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	83 ed       	ldi	r24, 0xD3	; 211
  9e:	90 e3       	ldi	r25, 0x30	; 48
  a0:	21 50       	subi	r18, 0x01	; 1
  a2:	80 40       	sbci	r24, 0x00	; 0
  a4:	90 40       	sbci	r25, 0x00	; 0
  a6:	e1 f7       	brne	.-8      	; 0xa0 <led_switch+0xa>
  a8:	00 c0       	rjmp	.+0      	; 0xaa <led_switch+0x14>
  aa:	00 00       	nop
	_delay_ms(1000);
	PORTD = 0b10101010;
  ac:	8a ea       	ldi	r24, 0xAA	; 170
  ae:	8b b9       	out	0x0b, r24	; 11
  b0:	2f ef       	ldi	r18, 0xFF	; 255
  b2:	83 ed       	ldi	r24, 0xD3	; 211
  b4:	90 e3       	ldi	r25, 0x30	; 48
  b6:	21 50       	subi	r18, 0x01	; 1
  b8:	80 40       	sbci	r24, 0x00	; 0
  ba:	90 40       	sbci	r25, 0x00	; 0
  bc:	e1 f7       	brne	.-8      	; 0xb6 <led_switch+0x20>
  be:	00 c0       	rjmp	.+0      	; 0xc0 <led_switch+0x2a>
  c0:	00 00       	nop
	_delay_ms(1000);	
}
  c2:	08 95       	ret

000000c4 <led_circle>:

int led_circle(){
  c4:	0f 93       	push	r16
  c6:	1f 93       	push	r17
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	cd b7       	in	r28, 0x3d	; 61
  ce:	de b7       	in	r29, 0x3e	; 62
  d0:	60 97       	sbiw	r28, 0x10	; 16
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	f8 94       	cli
  d6:	de bf       	out	0x3e, r29	; 62
  d8:	0f be       	out	0x3f, r0	; 63
  da:	cd bf       	out	0x3d, r28	; 61
	PORTD = 0X00;
  dc:	1b b8       	out	0x0b, r1	; 11
	int array[8]= {PORTD0,PORTD1,PORTD2,PORTD3,PORTD4,PORTD5,PORTD6,PORTD7};
  de:	20 e1       	ldi	r18, 0x10	; 16
  e0:	e0 e0       	ldi	r30, 0x00	; 0
  e2:	f1 e0       	ldi	r31, 0x01	; 1
  e4:	ce 01       	movw	r24, r28
  e6:	01 96       	adiw	r24, 0x01	; 1
  e8:	dc 01       	movw	r26, r24
  ea:	01 90       	ld	r0, Z+
  ec:	0d 92       	st	X+, r0
  ee:	2a 95       	dec	r18
  f0:	e1 f7       	brne	.-8      	; 0xea <led_circle+0x26>
  f2:	ac 01       	movw	r20, r24
  f4:	fe 01       	movw	r30, r28
  f6:	71 96       	adiw	r30, 0x11	; 17
  f8:	dc 01       	movw	r26, r24
	int i,j;
	for (i = 0; i < 8; i ++){
		PORTD |= (1<<array[i]);
  fa:	61 e0       	ldi	r22, 0x01	; 1
  fc:	70 e0       	ldi	r23, 0x00	; 0
  fe:	2b b1       	in	r18, 0x0b	; 11
 100:	8c 91       	ld	r24, X
 102:	12 96       	adiw	r26, 0x02	; 2
 104:	8b 01       	movw	r16, r22
 106:	02 c0       	rjmp	.+4      	; 0x10c <led_circle+0x48>
 108:	00 0f       	add	r16, r16
 10a:	11 1f       	adc	r17, r17
 10c:	8a 95       	dec	r24
 10e:	e2 f7       	brpl	.-8      	; 0x108 <led_circle+0x44>
 110:	c8 01       	movw	r24, r16
 112:	82 2b       	or	r24, r18
 114:	8b b9       	out	0x0b, r24	; 11
 116:	1f ef       	ldi	r17, 0xFF	; 255
 118:	21 ee       	ldi	r18, 0xE1	; 225
 11a:	84 e0       	ldi	r24, 0x04	; 4
 11c:	11 50       	subi	r17, 0x01	; 1
 11e:	20 40       	sbci	r18, 0x00	; 0
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <led_circle+0x58>
 124:	00 c0       	rjmp	.+0      	; 0x126 <led_circle+0x62>
 126:	00 00       	nop

int led_circle(){
	PORTD = 0X00;
	int array[8]= {PORTD0,PORTD1,PORTD2,PORTD3,PORTD4,PORTD5,PORTD6,PORTD7};
	int i,j;
	for (i = 0; i < 8; i ++){
 128:	ae 17       	cp	r26, r30
 12a:	bf 07       	cpc	r27, r31
 12c:	41 f7       	brne	.-48     	; 0xfe <led_circle+0x3a>
		PORTD |= (1<<array[i]);
		_delay_ms(100);
	}
	for (j = 7; j>-1; j--){
		PORTD &=~(1<<array[j]);
 12e:	61 e0       	ldi	r22, 0x01	; 1
 130:	70 e0       	ldi	r23, 0x00	; 0
 132:	9b b1       	in	r25, 0x0b	; 11
 134:	32 97       	sbiw	r30, 0x02	; 2
 136:	9b 01       	movw	r18, r22
 138:	00 80       	ld	r0, Z
 13a:	02 c0       	rjmp	.+4      	; 0x140 <led_circle+0x7c>
 13c:	22 0f       	add	r18, r18
 13e:	33 1f       	adc	r19, r19
 140:	0a 94       	dec	r0
 142:	e2 f7       	brpl	.-8      	; 0x13c <led_circle+0x78>
 144:	82 2f       	mov	r24, r18
 146:	80 95       	com	r24
 148:	89 23       	and	r24, r25
 14a:	8b b9       	out	0x0b, r24	; 11
 14c:	9f ef       	ldi	r25, 0xFF	; 255
 14e:	01 ee       	ldi	r16, 0xE1	; 225
 150:	14 e0       	ldi	r17, 0x04	; 4
 152:	91 50       	subi	r25, 0x01	; 1
 154:	00 40       	sbci	r16, 0x00	; 0
 156:	10 40       	sbci	r17, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <led_circle+0x8e>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <led_circle+0x98>
 15c:	00 00       	nop
	int i,j;
	for (i = 0; i < 8; i ++){
		PORTD |= (1<<array[i]);
		_delay_ms(100);
	}
	for (j = 7; j>-1; j--){
 15e:	e4 17       	cp	r30, r20
 160:	f5 07       	cpc	r31, r21
 162:	39 f7       	brne	.-50     	; 0x132 <led_circle+0x6e>
		PORTD &=~(1<<array[j]);
		_delay_ms(100);
	}
}
 164:	60 96       	adiw	r28, 0x10	; 16
 166:	0f b6       	in	r0, 0x3f	; 63
 168:	f8 94       	cli
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	0f be       	out	0x3f, r0	; 63
 16e:	cd bf       	out	0x3d, r28	; 61
 170:	df 91       	pop	r29
 172:	cf 91       	pop	r28
 174:	1f 91       	pop	r17
 176:	0f 91       	pop	r16
 178:	08 95       	ret

0000017a <main>:


int main(void)
{
	int i = 0;
	DDRD = 0XFF; // set
 17a:	8f ef       	ldi	r24, 0xFF	; 255
 17c:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0X00;
 17e:	1b b8       	out	0x0b, r1	; 11
	DDRB = 0b00000000; // set B0 as input
 180:	14 b8       	out	0x04, r1	; 4
	PINB |= 0b0000001; // B0 connect pull-up resistor; 
 182:	18 9a       	sbi	0x03, 0	; 3
	while(1){

		if (PINB & 0b00000001){
 184:	18 9b       	sbis	0x03, 0	; 3
 186:	0c c0       	rjmp	.+24     	; 0x1a0 <main+0x26>
			led_circle();
 188:	0e 94 62 00 	call	0xc4	; 0xc4 <led_circle>
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	81 ee       	ldi	r24, 0xE1	; 225
 190:	94 e0       	ldi	r25, 0x04	; 4
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x18>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x22>
 19c:	00 00       	nop
 19e:	f2 cf       	rjmp	.-28     	; 0x184 <main+0xa>
			_delay_ms(100);
		}
		else{
			led_switch();
 1a0:	0e 94 4b 00 	call	0x96	; 0x96 <led_switch>
 1a4:	2f ef       	ldi	r18, 0xFF	; 255
 1a6:	81 ee       	ldi	r24, 0xE1	; 225
 1a8:	94 e0       	ldi	r25, 0x04	; 4
 1aa:	21 50       	subi	r18, 0x01	; 1
 1ac:	80 40       	sbci	r24, 0x00	; 0
 1ae:	90 40       	sbci	r25, 0x00	; 0
 1b0:	e1 f7       	brne	.-8      	; 0x1aa <main+0x30>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <main+0x3a>
 1b4:	00 00       	nop
 1b6:	e6 cf       	rjmp	.-52     	; 0x184 <main+0xa>

000001b8 <_exit>:
 1b8:	f8 94       	cli

000001ba <__stop_program>:
 1ba:	ff cf       	rjmp	.-2      	; 0x1ba <__stop_program>
